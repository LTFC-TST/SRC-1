# This is a basic workflow to help you get started with Actions

name: CI/CD

permissions:
  pull-requests: write
  issues: write
  repository-projects: write

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Lint
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Lint2
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
  build-push-image:
       
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      needs: lint
      steps:
      - uses: actions/checkout@v4
         # Runs a single command using the runners shell
      - name: Build
        run: echo Hello, world!
      - name: Test
        run: echo Hello, world!
      - name: Push Image
        run: echo Hello, world!
      

  deploy:
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      needs: build-push-image
      steps:
         # Runs a single command using the runners shell
      - uses: actions/checkout@v4
        with:
          repository: 'mojaorganizacjatestowa/GitOpsRepo-1'
          ref: 'main'
          token:  ${{ secrets.TOKEN }}

      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      - name: Commit and push generated template
        run: |
          ls
          cd deployment-1
          ls
          touch aa.txt | exit 0
          echo "aa" >> aa.txt
          export COMMIT_MESSAGE="DT:{{ github.repository }}/${{ github.ref}}@${{ github.sha }}"
          echo $COMMIT_MESSAGE
          git add .
          git commit -m "$COMMIT_MESSAGE"
          git push
